# Generated by Django 5.2.4 on 2025-08-31 20:30

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('news_app', '0003_alter_article_slug'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code for the category', max_length=7)),
                ('icon', models.CharField(blank=True, help_text='Font Awesome icon class', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(validators=[django.core.validators.MinLengthValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('like_count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReadingHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('read_duration', models.PositiveIntegerField(default=0, help_text='Time spent reading in seconds')),
                ('read_percentage', models.PositiveIntegerField(default=0, help_text='Percentage of article read')),
            ],
            options={
                'ordering': ['-read_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='article',
            options={'ordering': ['-is_sticky', '-created_at'], 'permissions': [('can_publish_article', 'Can publish article'), ('can_approve_article', 'Can approve article'), ('can_feature_article', 'Can feature article')]},
        ),
        migrations.AlterModelOptions(
            name='newsletter',
            options={'ordering': ['-created_at']},
        ),
        migrations.AddField(
            model_name='article',
            name='allow_comments',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='article',
            name='comment_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='article',
            name='excerpt',
            field=models.TextField(blank=True, help_text='Brief summary for previews', max_length=500),
        ),
        migrations.AddField(
            model_name='article',
            name='featured_image_alt',
            field=models.CharField(blank=True, help_text='Alt text for accessibility', max_length=200),
        ),
        migrations.AddField(
            model_name='article',
            name='is_featured',
            field=models.BooleanField(default=False, help_text='Feature this article on homepage'),
        ),
        migrations.AddField(
            model_name='article',
            name='is_sticky',
            field=models.BooleanField(default=False, help_text='Keep at top of listings'),
        ),
        migrations.AddField(
            model_name='article',
            name='like_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='article',
            name='meta_description',
            field=models.CharField(blank=True, help_text='SEO meta description', max_length=160),
        ),
        migrations.AddField(
            model_name='article',
            name='meta_keywords',
            field=models.CharField(blank=True, help_text='SEO keywords', max_length=255),
        ),
        migrations.AddField(
            model_name='article',
            name='priority',
            field=models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('breaking', 'Breaking News')], default='normal', max_length=10),
        ),
        migrations.AddField(
            model_name='article',
            name='published_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='article',
            name='reading_time',
            field=models.PositiveIntegerField(default=0, help_text='Estimated reading time in minutes'),
        ),
        migrations.AddField(
            model_name='article',
            name='share_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='article',
            name='subtitle',
            field=models.CharField(blank=True, help_text='Optional subtitle', max_length=300),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.CharField(blank=True, help_text='Comma-separated tags', max_length=500),
        ),
        migrations.AddField(
            model_name='article',
            name='view_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='customuser',
            name='bio',
            field=models.TextField(blank=True, help_text='Brief description about yourself', max_length=500),
        ),
        migrations.AddField(
            model_name='customuser',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default='2025-08-31 12:00:00'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='customuser',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='is_verified',
            field=models.BooleanField(default=False, help_text='Verified journalist/editor'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='location',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='customuser',
            name='phone_number',
            field=models.CharField(blank=True, max_length=15),
        ),
        migrations.AddField(
            model_name='customuser',
            name='profile_image',
            field=models.ImageField(blank=True, null=True, upload_to='profile_images/'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='total_likes',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='customuser',
            name='total_views',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='customuser',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='customuser',
            name='website',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='newsletter',
            name='articles',
            field=models.ManyToManyField(blank=True, help_text='Featured articles in this newsletter', to='news_app.article'),
        ),
        migrations.AddField(
            model_name='newsletter',
            name='click_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='newsletter',
            name='frequency',
            field=models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('special', 'Special Edition')], default='weekly', max_length=10),
        ),
        migrations.AddField(
            model_name='newsletter',
            name='open_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='newsletter',
            name='scheduled_for',
            field=models.DateTimeField(blank=True, help_text='Schedule newsletter for future sending', null=True),
        ),
        migrations.AddField(
            model_name='newsletter',
            name='sent_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='publisher',
            name='contact_email',
            field=models.EmailField(blank=True, max_length=254),
        ),
        migrations.AddField(
            model_name='publisher',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default='2025-08-31 12:00:01'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='publisher',
            name='established_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='publisher',
            name='facebook_url',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='publisher',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='publisher',
            name='linkedin_url',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='publisher',
            name='slug',
            field=models.SlugField(blank=True, unique=True),
        ),
        migrations.AddField(
            model_name='publisher',
            name='total_articles',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='publisher',
            name='total_subscribers',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='publisher',
            name='twitter_handle',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='publisher',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='article',
            name='approved_by',
            field=models.ForeignKey(blank=True, limit_choices_to={'role__in': ['editor', 'admin']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_articles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='article',
            name='content',
            field=models.TextField(validators=[django.core.validators.MinLengthValidator(100)]),
        ),
        migrations.AlterField(
            model_name='article',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('published', 'Published'), ('rejected', 'Rejected'), ('archived', 'Archived')], default='draft', max_length=10),
        ),
        migrations.AlterField(
            model_name='article',
            name='title',
            field=models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(5)]),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='role',
            field=models.CharField(choices=[('reader', 'Reader'), ('journalist', 'Journalist'), ('editor', 'Editor'), ('admin', 'Administrator')], default='reader', max_length=20),
        ),
        migrations.AlterField(
            model_name='newsletter',
            name='content',
            field=models.TextField(validators=[django.core.validators.MinLengthValidator(50)]),
        ),
        migrations.AlterField(
            model_name='newsletter',
            name='created_by',
            field=models.ForeignKey(limit_choices_to={'role__in': ['journalist', 'editor']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_newsletters', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='newsletter',
            name='title',
            field=models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(5)]),
        ),
        migrations.AlterField(
            model_name='publisher',
            name='description',
            field=models.TextField(validators=[django.core.validators.MinLengthValidator(10)]),
        ),
        migrations.AlterField(
            model_name='publisher',
            name='name',
            field=models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2)]),
        ),
        migrations.CreateModel(
            name='ArticleLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='news_app.article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked_articles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to='news_app.category'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='preferred_categories',
            field=models.ManyToManyField(blank=True, related_name='preferred_by', to='news_app.category'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['status', 'published_at'], name='news_app_ar_status_bedd0f_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['category', 'status'], name='news_app_ar_categor_139f9b_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['publisher', 'status'], name='news_app_ar_publish_9a3164_idx'),
        ),
        migrations.AddField(
            model_name='comment',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='news_app.article'),
        ),
        migrations.AddField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='news_app.comment'),
        ),
        migrations.AddField(
            model_name='readinghistory',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='readers', to='news_app.article'),
        ),
        migrations.AddField(
            model_name='readinghistory',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_history', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='articlelike',
            unique_together={('article', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='readinghistory',
            unique_together={('user', 'article')},
        ),
    ]
